pluginManagement {
    resolutionStrategy {
        eachPlugin {
            switch (requested.id.id) {
                case "org.springframework.boot": useVersion("${SPRING_BOOT_VERSION}")
                    break
                case "io.spring.dependency-management": useVersion("${SPRING_BOOT_DEPENDENCY_MANAGEMENT_VERSION}")
                    break
            }
        }
    }
}

rootProject.name = 'Spring-Boot-Template'

include 'restdocs-swagger'
include 'logging'
include 'logging:logback'
include 'test-code'
include 'mapstruct'
include 'pf4j'
include 'pf4j:pf4j-api'
include 'pf4j:pf4j-plugin'
include 'pf4j:pf4j-app'
include 'pf4j:pf4j-plugin:pf4j-plugin-01'
include 'pf4j:pf4j-plugin:pf4j-plugin-02'
include 'pf4j:pf4j-plugin:pf4j-plugin-03'

findProject(':logging:logback')?.name = 'logback'
findProject(':pf4j:pf4j-api')?.name = 'pf4j-api'
findProject(':pf4j:pf4j-app')?.name = 'pf4j-app'
findProject(':pf4j:pf4j-plugin')?.name = 'pf4j-plugin'
findProject(':pf4j:pf4j-plugin:pf4j-plugin-01')?.name = 'pf4j-plugin-01'
findProject(':pf4j:pf4j-plugin:pf4j-plugin-02')?.name = 'pf4j-plugin-02'
findProject(':pf4j:pf4j-plugin:pf4j-plugin-03')?.name = 'pf4j-plugin-03'

