pluginManagement {
    resolutionStrategy {
        eachPlugin {
            switch (requested.id.id) {
                case "org.springframework.boot": useVersion("${SPRING_BOOT_VERSION}")
                    break
                case "io.spring.dependency-management": useVersion("${SPRING_BOOT_DEPENDENCY_MANAGEMENT_VERSION}")
                    break
            }
        }
    }
}

rootProject.name = 'Spring-Boot-Template'

//[RESTDOKS]
include 'restdocs-swagger'

//[LOGGING]
include 'logging'
include 'logging:logback'

//[TEST]
include 'test-code'

//[MAPSTRUCT]
include 'mapstruct'

//[PF4J]
include 'pf4j'
include 'pf4j:pf4j-api'
include 'pf4j:pf4j-plugin'
include 'pf4j:pf4j-app'
include 'pf4j:pf4j-plugin:pf4j-plugin-01'
include 'pf4j:pf4j-plugin:pf4j-plugin-02'
include 'pf4j:pf4j-plugin:pf4j-plugin-03'

//[SECRET]
include 'secret'
include 'secret:secret-core'
include 'secret:sha3-256-secret'
include 'secret:aes-256-secret'